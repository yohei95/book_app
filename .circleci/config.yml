version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          - BUNDLER_VERSION: 2.0.2
          - RAILS_ENV: "test"

      - image: circleci/mysql:5.6
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_ROOT_HOST: "127.0.0.1"

    working_directory: ~/book_app

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |


            gem install bundler -v 2.0.2
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: mv config/database.yml.ci config/database.yml

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          name: yarn Install
          command: yarn install
      - run: bundle exec bin/webpack

      # rubocopを走らせる記述
      - run:
          name: Rubocop
          command: bundle exec rubocop

      # rspecを走らせる記述
      # run tests!
      # - run:
      #     name: run tests
      #     command: |
      #       mkdir /tmp/test-results
      #       TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
      #         circleci tests split --split-by=timings)"

      #       bundle exec rspec \
      #         --format progress \
      #         --format RspecJunitFormatter \
      #         --out /tmp/test-results/rspec.xml \
      #         --format progress \
      #         $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - add_ssh_keys:
          fingerprints:
            - "6b:40:1f:61:28:d2:17:ff:d3:05:df:15:4d:94:b5:1d"

      - deploy:
          name: Capistrano deploy
          command: bundle exec cap production deploy
          # command: |
          #   if [ "${CIRCLE_BRANCH}" != "master" ]; then
          #     exit 0
          #   fi
          #   bundle exec cap production deploy
